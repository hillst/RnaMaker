{%  extends "HillCMSRnaMakerBundle:Default:modal-template.html.twig" %}
{% set modal_id = "start" %}
{% set modal_title = groups[2]["PopupTitle"] %}
{% block body %}
<div class="container">
	<div class="jumbotron" style="float:none">
		{% for main in groups %}
		{# The foreach is not necessary, however accessing the groups in an iterative manner is how it should be done in all-non singular cases, and it is 
			good practice to do it with singular groups as well. #}
			<h1 class="tool-header">{{ main["Header"] }}</h1>
			<p>{{ main["Content"] }}
			</p>
		{% endfor %}
        <a data-toggle="modal" href="#start" class="btn btn-default btn-block btn-tile btn-tertiary">
			Get Started.
		</a>
        <div class="col-lg-12 image">
    	    <img style="width:100%; padding-left: 0px; padding-right:0px"class="img-responsive img-rounded" src="/includes/images/AtMIR390a_foldback.png"/>	
        </div>
	</div>
</div>
{{ parent() }}
{% endblock %}
	{% block modal %}
    
	<form role="form" class="targetfinder">
	  <div class="form-group">
	    <label for="seq">amiRNA Sequence, click to edit name</label> <br/>
	    <label class="name" style="border-bottom: 1px dashed #000;">amiRNA</label> 
		<input type="text" class="form-control" class = "orig" id="seq" placeholder="seq" name="seq">
	  </div>
	  <input type="hidden" name="fb" value="eudicot"/>
        <!--
	  <div class="form-group">
        <label for="fb">Foldback type:</label>
	  	<select class="form-control" name="fb" id="fb">
            <option value="eudicot">eudicot</option>
            <option value="monocot">monocot</option>
        </select>
      </div>
        -->
	  <div class="result hidden" ></div>
	  <a href= "#" id="result" type="submit" class="btn btn-default btn-block btn-large btn-tertiary">Submit</a>
	</form>
	{% endblock %}
{% block javascript %}
<script type="text/javascript">
$().ready(function(){
    var changed = true;
    //global
    initialFormState = $(".targetfinder").html(); 
    // returns true if an error or warning is found, otherwise false.
    function checkErrors(form){
        form = $(form); 
        var seq = $("#seq").val();
        result = $(".result");
        result.text("");
        result.addClass("hidden");
        result.removeClass("alert alert-danger alert-warning");
        $("#seq").removeClass("alert alert-danger alert-warning input-danger input-warning");
        var errors = "";
        var warnings = "";
        if(seq.length != 21){
            errors += "Error: Your input sequence is not 21 NT in length<br/>";
        }
        if(seq.match("^[ATCGUatcgu]+$") != seq){
            errors += "Error: Your sequence contains characters that are not A,T,C,G, or U<br/>";
        }
        if (seq.substr(0,1).toUpperCase() !== "T" && seq.substr(0,1).toUpperCase() !== "U"){
            warnings += "Warning: We recommend a T or U on the 5' end.<br/>";
        }
        if (seq.substr(18,1).toUpperCase() !== "C"){
            warnings += "Warning: We recommend a C at amiR position 19, in order to have a 5' G on the miR*<br/>";
        }
        if (errors != ""){
            $("#seq").addClass("alert alert-danger input-danger");
            result.removeClass("hidden");
            result.addClass("alert alert-danger");
            result.append(errors);
            result.append(warnings);
            return true;
        } else if (warnings != ""){
            $("#seq").addClass("alert alert-warning input-warning");
            result.removeClass("hidden");
            result.addClass("alert alert-warning");
            result.append(warnings);
            return true;
        }
        return false;
    }
    $("#close-clear").click(function(){
        $(".targetfinder").html(initialFormState);
        changed = true; //just for good measure
    });
    $("#seq").change(function(){
        changed = true;
    });
	$('.targetfinder').submit(function(event){
        //submission validation
		if (changed && checkErrors(this)){
            event.preventDefault();
            //if just warnings reset changed 
            if ($('.result').hasClass("alert-warning")){
                changed = false;
            }
            return;
        }
        //ajax submission
        form = $(this);
        var finseq = $(this).serialize();
        name = $(".name").last().text();
        if (name == ""){
            name = $(".name").val();
        }
        finseq += "&name=" + name;
		$.ajax({
			type: "POST",
			url: '{{ path("rnamaker_oligorequest") }}', 
			data: finseq,	
			//should return a token that will access the results, as stored in memory
			success: function(data){
				form.find('.result').removeClass('hidden alert alert-danger alert-warning');
				form.find('.result').addClass("alert alert-success");
				form.find('.result').text("Success!");
				$( "#result" ).animate({
			          backgroundColor: "#7CB02C", //btn secondary 
			          color: "#fff"
				}, 1000 );
	    		$("#result").attr("href", "{{ path("result_token_plain") }}/" + data );
                $("#result").text("Click to see Results");
				$("#result").unbind("click");			    
			},
			error: function(xhr, status, error) {
				form.find('.result').removeClass('hidden alert alert-success alert-warning');
				form.parent().find('.result').addClass("alert alert-danger");
				if (xhr.responseText != ""){
					form.parent().find('.result').text(xhr.responseText);
				} else{
					if(!ignore){
						form.parent().find('.result').text("Error");
					}
				}
			},
			beforeSend: function(){
                form.find('.result').removeClass('hidden alert alert-danger alert-success');
				form.find('.result').addClass('alert alert-warning');
				form.find('.result').html('<img src="{{ asset("includes/images/ajax-loader.gif") }}"/>' );
			}
		});
		return false;
	});
	//bind to targetfinder form
	$('#result').click(function(){
		$('.targetfinder').submit()
	});
    $(".name").click(toInputTransform);
    $('.modal').click(function(){
        //revert
        if (!$(event.target).hasClass('name')) {
            $(".modified").each(function(){
                var val = $(this).val()
                $(this).replaceWith("<label class='name' style='border-bottom: 1px dashed #000;text-decoration: none;'>" + val + "</label>");
                $(".name").click(toInputTransform);
            });
        }
    });
    function toInputTransform(){
        var cur = $(this).text();
        if (cur == ""){
            var cur = $(this).val();
        }
        $(this).replaceWith("<input type='text' class='form-control name modified' value='" + cur + "' placeholder='" + cur +"'/>") ;
    } 
});
</script>
{% endblock %}
